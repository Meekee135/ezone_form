@use "../abstracts/" as *;
// to do
// |-change divs#mid ... to semantic markup (somethink like dataset, formfiled, form ?) in index.html
// |
// |-try to write some if statements or sass tricks to be able to change style of
// |    the modal with overitting '!important'
// |
// |----make middle #mid section for form inputs and header question to maintain good width on all screen sizes
//    |  you can use clamp(200px, 40vw, 700px) so that it wont get too big or to small without mediaqueries
//    |
//    |-create a grid that sits inside and holds the checkbox answers (fps, mmorpg, racing ...)
//    |
//    |- style as in XD, invisible checkboxes will be useful
.form-window {
  width: 100% !important;
  height: 100vh !important;
  display: grid;
  grid-template-columns: 1fr minmax(0, 800px) 1fr;
  grid-template-rows: clamp(81px, 5.5vw, 105px) 30% clamp(200px, 15vw, 300px) 1fr;
  border-top: 1px solid hsla(0, 0%, 100%, 0);
  backdrop-filter: blur(10px) brightness(50%) !important;
  @supports not (backdrop-filter: blur(9px)) {
    background-color: #16152bec;
  }
  #start {
    & > * {
      transform: translateX(-120%) !important;
      transition: 0.6s ease-out;
      &:not(:first-child) {
        transition-delay: 0.2s;
      }
    }
  }
  & > :not(:first-child) {
    display: inherit !important;
    opacity: 1 !important;
    transition: opacity 0.3s 0.9s ease-out;
    pointer-events: all !important;
  }
}
form {
  justify-self: center;
  grid-row: 3/4;
  grid-column: 2/3;
  height: 100%;
  width: 100%;
  display: grid;
  .checkboxes {
    grid-template-rows: repeat(4, 1fr);
    grid-template-columns: repeat(4, 1fr);
  }
  fieldset {
    position: relative;
    height: 100%;
    border: none;
    display: none;
    opacity: 1;
    legend {
      position: absolute;
      transform: translateX(-50%);
      left: 50%;
      top: -45%;
      font-size: 25px;
      font-family: $copy-header;
      color: $offwhite-font;
    }
    .field {
      display: grid;
      max-width: 100%;
      padding: 0;
      height: min-content;
      grid-gap: 0;
      place-self: center;
      label {
        font-family: $action;
        // font-size: 1.5rem;
        font-size: 1.4vw;
        color: transparent;
        text-transform: uppercase;
        // background: linear-gradient(-50deg, $grey-font 50%, $bright-green 50%);
        background: linear-gradient(-50deg, $grey-font 50%, $purple 50%);
        background-size: 230% 100%;
        background-position-x: 100%;
        background-repeat: no-repeat;
        background-clip: text;
        -webkit-background-clip: text;
        transition: background-position 0.1s ease-out;
        cursor: pointer;
      }
      input {
        display: none;
        &:checked + label {
          background-position-x: 0%;
        }
      }
    }
  }
  .visible {
    display: grid;
    // opacity: 1;
  }
}
#left {
  grid-row: 3/4;
  place-self: center end;
  margin-right: 20%;
}
#right {
  grid-row: 3/4;
  height: 100%;
  grid-template-rows: 100%;
  place-self: center start;
  position: relative;
  margin-left: 20%;
  .arrow {
    grid-row: 1/2;
    place-self: center;
  }
  #progress {
    position: absolute;
    height: 100%;
    margin-left: 450%;
    stroke-width: 3px;
    #Group_46 {
      #Rectangle_47 {
        transform: translateY(28%);
      }
      #Rectangle_46 {
        transform: translateY(56%);
      }
      #Rectangle_45 {
        fill: $green;
        transform: scaleY(-1);
        height: 15%;
        transition: 0.4s cubic-bezier(0.25, 0.68, 0.21, 0.99);
      }
    }
  }
}

.arrow {
  cursor: pointer;
  path {
    stroke-width: 3px;
    fill: none;
    pointer-events: none;
  }
  &.grey {
    stroke: $grey-font;
  }
  &.green {
    stroke: $green;
    transform: rotate(180deg);
  }
}
#left .arrow {
  stroke-dasharray: 2;
  stroke-dashoffset: 1;
  transition: stroke-dashoffset 0.2s ease-out;
  &.cross {
    stroke-dashoffset: 0;
  }
}
.popup .articles {
  position: absolute;
  // border: 2px solid #a5a5ac;
  width: min-content !important;
  padding: 1rem 1rem !important;
  gap: 1rem !important;
  height: min-content !important;
  display: flex !important;
  flex-direction: row !important;
  bottom: -90px;

  .article {
    width: calc(160px * 0.8);
    height: calc(220px * 0.8);
    padding: 1rem;
    border-radius: 4px;
    background-repeat: no-repeat;
    background-size: cover;
    color: white;
    position: relative;
    transition: 0.2s ease-in-out;
    transform: translateY(60%);
    filter: grayscale(0.8);
    transition: 0.4s cubic-bezier(0.25, 0.68, 0.21, 0.99);
    pointer-events: none;
    p {
      display: none;
    }
    h1 {
      font-family: $copy-p;
      font-weight: 900;
      white-space: normal;
      padding-bottom: 4rem;
      font-size: clamp(0.8rem, 2.5vw, 0.7rem);
    }
    button {
      font-family: $action;
      color: white;
      border: 1px solid white;
      position: absolute;
      bottom: 1vw;
    }
    // .a1::after {
    //   transform: translateY(400px);
    // }
    &:hover {
      transform: translateY(0px) scale(1);
    }
  }
  .paint {
    width: 160px;
    height: 220px;
    transform: translateY(-165%) !important;
    filter: grayscale(0) !important;
    pointer-events: all;
  }
  .above {
    transform: translateY(0%);
  }
}

.personal {
  // transform: translateY(-100%);
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  .input-wrap {
    place-self: center;
    position: relative;
    width: 300px;
    label {
      position: absolute;
      bottom: 5px;
      left: 2%;
      transition: all 0.2s ease;
      font-size: 1rem;
      cursor: text;
      font-family: $big;
    }
    input:not(#tos) {
      font-family: $action;
      width: 100%;
      font-size: 1.7rem;
      outline: none;
      border: none;
      border-bottom: 1px solid hsla(0, 0%, 100%, 0.11765);
      fill: none;
      background-color: transparent;
      color: white;
      padding-left: 15px;
      &:focus ~ label,
      &:not(:placeholder-shown) ~ label {
        transform: translateY(-30px);
        left: 0;
        font-size: 0.9rem;
      }
      &:focus:not(#tos) ~ label {
        color: $purple !important;
      }
      &:not(:focus):valid ~ label {
        color: $green;
      }
      &:not(:focus, :placeholder-shown, #dob):invalid ~ label {
        color: rgb(196, 0, 0);
      }
      &:-webkit-autofill {
        -webkit-box-shadow: 0 0 0 1000px #0b0a15 inset !important;
        -webkit-text-fill-color: white !important;
      }
      &[type="date"]::-webkit-calendar-picker-indicator {
        background: transparent;
        bottom: 0;
        color: transparent;
        cursor: pointer;
        height: auto;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        width: auto;
      }
    }
    #dob {
      font-size: 1.3em !important;
      & ~ label {
        left: 1% !important;
      }
      & ~ span {
        position: absolute;
        right: 0;
        bottom: 5px;
        font-size: 0.7rem;
        // color: rgb(196, 0, 0);
        visibility: hidden;
      }
      &:not(:focus) {
        color: $grey-font !important;
      }
    }
    #email {
      font-size: 1.3em !important;
    }
    #tos {
      transform: translateX(25%);
      width: 100%;
      bottom: 4px;
      right: -70px;

      & ~ label {
        bottom: 0px !important;
        cursor: pointer;
      }
      &:checked ~ label {
        color: $green;
      }
    }
    #pas {
      & ~ span {
        position: absolute;
        right: 0;
        bottom: 5px;
        font-size: 0.7rem;
        // color: rgb(196, 0, 0);
        visibility: hidden;
      }
      &:not(:focus, :placeholder-shown):invalid ~ span {
        visibility: visible;
      }
    }
  }
}
#fix > p {
  place-self: center;
  grid-row: 1/2;
  grid-column: 1/-1;
}
