@use '../abstracts/' as *;
// to do
// |-change divs#mid ... to semantic markup (somethink like dataset, formfiled, form ?) in index.html
// |
// |-try to write some if statements or sass tricks to be able to change style of
// |    the modal with overitting '!important'
// |
// |----make middle #mid section for form inputs and header question to maintain good width on all screen sizes
//    |  you can use clamp(200px, 40vw, 700px) so that it wont get too big or to small without mediaqueries
//    |
//    |-create a grid that sits inside and holds the checkbox answers (fps, mmorpg, racing ...)
//    |
//    |- style as in XD, invisible checkboxes will be useful
.form-window {
  width: 100% !important;
  height: 100vh !important;
  display: grid;
  grid-template-columns: 1fr minmax(0, 800px) 1fr;
  grid-template-rows: clamp(81px, 5.5vw, 105px) 30% 35% 1fr;
  border-top: 1px solid hsla(0, 0%, 100%, 0);
  backdrop-filter: blur(10px) brightness(80%) !important;
  @supports not (backdrop-filter: blur(9px)) {
    background-color: #16152bec;
  }
  #start {
    & > * {
      transform: translateX(-120%) !important;
      transition: 0.6s ease-out;
      &:not(:first-child) {
        transition-delay: 0.15s;
      }
    }
  }
  & > :not(:first-child) {
    display: inherit !important;
    opacity: 1 !important;
    transition: opacity 0.3s 0.9s ease-out;
    pointer-events: all !important;
  }
}
form {
  justify-self: center;
  grid-row: 3/4;
  grid-column: 2/3;
  height: 100%;
  width: 100%;
  display: grid;
  .checkboxes {
    grid-template-rows: repeat(4, 1fr);
    grid-template-columns: repeat(4, 1fr);
  }
  fieldset {
    position: relative;
    display: grid;
    height: 100%;
    border: none;

    legend {
      position: absolute;
      transform: translateX(-50%);
      left: 50%;
      top: -45%;
      font-size: 25px;
      font-family: $copy-header;
      color: $offwhite-font;
    }
    .field {
      display: grid;
      max-width: 100%;
      justify-content: center;
      padding: 0;
      height: min-content;
      grid-gap: 0;
      label {
        font-family: $action;
        font-size: 24px;
        color: transparent;
        text-transform: uppercase;
        // background: linear-gradient(-50deg, $grey-font 50%, $bright-green 50%);
        background: linear-gradient(-50deg, $grey-font 50%, $purple 50%);
        background-size: 230% 100%;
        background-position-x: 100%;
        background-repeat: no-repeat;
        background-clip: text;
        -webkit-background-clip: text;
        transition: background-position 0.1s ease-out;
        cursor: pointer;
      }
      input {
        display: none;
        &:checked + label {
          background-position-x: 0%;
        }
      }
    }
  }
}
#left {
  grid-row: 3/4;
  place-self: center end;
  margin-right: 20%;
}
#right {
  grid-row: 3/4;
  height: 100%;
  grid-template-rows: 100%;
  place-self: center start;
  position: relative;
  margin-left: 20%;
  .arrow {
    grid-row: 1/2;
    place-self: center;
  }
  #progress {
    position: absolute;
    height: 100%;
    margin-left: 500%;
    stroke-width: 3px;
    #Rectangle_47 {
      transform: translateY(28%);
    }
    #Rectangle_46 {
      transform: translateY(56%);
    }
    #Rectangle_45 {
      transform: translateY(85%);
      height: 15%;
      bottom: 0;
      fill: $bright-green;
    }
  }
}

.arrow {
  path {
    stroke-width: 3px;
    fill: none;
  }
  &.grey {
    stroke: $grey-font;
  }
  &.green {
    stroke: $bright-green;
    transform: rotate(180deg);
  }
}
.popup .articles {
  margin-top: 4vh;
  display: flex !important;
  flex-direction: row !important;
  border: 2px solid #a5a5ac;
  width: min-content !important;
  grid-area: 4/-3/5/-2;
  padding: 2vw 4vw;
  gap: 1rem !important;

  .article {
    width: 160px;
    height: 220px;
    padding: 1.5rem;
    border-radius: 4px;
    background-repeat: no-repeat;
    background-size: cover;
    color: white;
    position: relative;
    transition: 0.2s ease-in-out;
    p {
      font-family: $big;
      font-size: 1rem;
      padding-bottom: 3rem;
    }
    h1 {
      font-family: $copy-p;
      font-weight: 900;
      white-space: normal;
      padding-bottom: 4rem;
      font-size: clamp(0.8rem, 2.5vw, 0.7rem);
    }
    button {
      font-family: $action;
      color: white;
      border: 1px solid white;
      position: absolute;
      bottom: 1vw;
    }
    .a1::after {
      transform: translateY(400px);
    }
  }
}

.personal {
  place-content: center;
  .input-wrap {
    position: relative;
    width: 300px;
    &:not(:last-child) {
      margin-bottom: 40px;
    }
    label {
      position: absolute;
      bottom: 5px;
      left: 2%;
      transition: all 0.2s ease;
      font-size: 1rem;
      cursor: text;
    }
    input {
      width: 100%;
      outline: none;
      border: none;
      border-bottom: 1px solid hsla(0, 0%, 100%, 0.11765);
      fill: none;
      background-color: transparent;
      color: white;
      &:focus ~ label,
      &:not(:placeholder-shown) ~ label {
        transform: translateY(-25px);
        left: 0;
        font-size: 0.7rem;
      }
      &:focus ~ label {
        color: $purple;
      }
    }
  }
}
